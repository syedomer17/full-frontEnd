CSS Transitions & Animations:

 Imagine you have a magic ball 🎱.

🔵 Transitions – When you roll the ball, it smoothly changes color instead of instantly switching.
🟢 Animations – The ball bounces up and down continuously, like a real bouncing ball.

Let’s break it down and see some magic in action! ✨
1️⃣ CSS Transitions (Smooth Changes)
What’s a transition?
A transition makes changes happen smoothly over time, instead of suddenly.
For example, when you hover over a button, it slowly changes color instead of instantly switching.

Example Code
button {
    background-color: blue;
    color: white;
    padding: 15px 30px;
    font-size: 18px;
    border: none;
    cursor: pointer;
    transition: background-color 0.5s ease, transform 0.3s ease;
}

button:hover {
    background-color: red; /* Smoothly changes to red */
    transform: scale(1.2); /* Grows bigger when hovered */
}
📌 Now, when you hover over the button, it slowly turns red and gets bigger! 🎨

2️⃣ CSS Animations (Continuous Motion)
What’s an animation?
An animation lets something move, fade, spin, or change repeatedly.

It uses @keyframes, which tells the element what to do at different moments.

Example Code
@keyframes bounce {
    0% { transform: translateY(0); }
    50% { transform: translateY(-50px); }
    100% { transform: translateY(0); }
}

.ball {
    width: 50px;
    height: 50px;
    background-color: red;
    border-radius: 50%;
    position: relative;
    animation: bounce 1s infinite ease-in-out;
}
📌 Now, the red ball will keep bouncing up and down! 🏀

🌀 Transitions – Change happens smoothly when an action occurs (like hovering).
⚡ Animations – Elements move, fade, spin, or bounce without needing interaction.

🚀 Now you can make web pages come alive! Want to add more cool effects? 😃